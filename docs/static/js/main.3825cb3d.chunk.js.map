{"version":3,"sources":["hooks/useForm.js","components/PresupuestoContext.js","components/ColocarPresupuesto.js","components/ListadoGastos.js","components/AgregarGastos.js","App.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","PresupuestoContext","createContext","ColocarPresupuesto","presupuestoInicial","setPresupuesto","useContext","warning","setWarning","className","onSubmit","e","preventDefault","length","parseInt","presupuestoRestante","inicio","type","placeholder","onChange","ListadoGastos","gastos","presupuesto","map","nombre","cantidad","key","AgregarGastos","setGastos","g","Date","getTime","newPresupuesto","App","inicialGastos","JSON","parse","localStorage","getItem","inicialPresupuesto","useEffect","setItem","stringify","Provider","onClick","clear","window","location","href","ReactDOM","render","document","getElementById"],"mappings":"8MAEaA,EAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EACdC,mBAASD,GADK,mBACnCE,EADmC,KAC3BC,EAD2B,KAIhCC,EAAQ,WACVD,EAAWH,IAGbK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEJI,EAAOC,KAAOD,EAAOE,UAK9B,MAAO,CAAEN,EAAQG,EAAmBD,ICjB3BK,EAAqBC,wBAAc,MCEnCC,EAAqB,WAAO,IAAD,EAEqBZ,EAAQ,CAACa,mBAAmB,KAFjD,mBAE5BA,EAF4B,KAE5BA,mBAAqBP,EAFO,KAEYD,EAFZ,KAI9BS,EAAkBC,qBAAWL,GAA7BI,eAJ8B,EAMPZ,oBAAS,GANF,mBAM9Bc,EAN8B,KAMrBC,EANqB,KAqBpC,OACI,yBAAKC,UAAW,QACZ,qDAECF,GAAY,uBAAGE,UAAW,WAAd,gCAEb,0BAAMC,SAnBO,SAAAC,GACjBA,EAAEC,iBAEER,EAAmBS,QAAU,GAAKC,SAASV,IAAuB,EAClEI,GAAW,IAEXH,EAAe,CAACD,mBAAoBA,EAAoBW,oBAAsBX,EAAoBY,QAAQ,IAE1GpB,OAYI,2BAAOqB,KAAK,SACJC,YAAY,wBACZnB,KAAK,qBACLC,MAAOI,EACPe,SAAUtB,IAElB,4BAAQoB,KAAK,UAAb,0BCnCHG,EAAgB,WAAO,IAAD,EACCd,qBAAWL,GAAnCoB,EADuB,EACvBA,OAAQC,EADe,EACfA,YACRP,EAA4CO,EAA5CP,oBAAqBX,EAAuBkB,EAAvBlB,mBAc7B,OACI,6BACI,uCAECiB,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAUC,EAArB,EAAqBA,IAArB,OACR,yBAAKjB,UAAU,SAASiB,IAAKA,GACzB,yBAAKjB,UAAU,SACX,uBAAGA,UAAU,gBAAgBe,GAC7B,uBAAGf,UAAU,kBAAb,IAAgCgB,QAK5C,yBAAKhB,UAAU,wBACX,4CAAkBL,IAGtB,yBAAKK,UAAS,UA5BdM,EAA6C,GAArBX,EACjB,iBAEFW,GAA8C,GAArBX,EACvB,eAEA,oBAuBH,yCAAeW,M,OCjClBY,EAAgB,WAAO,IAAD,EAEkBrB,qBAAWL,GAArDqB,EAFwB,EAExBA,YAAajB,EAFW,EAEXA,eAAgBuB,EAFL,EAEKA,UAFL,EAIcrC,EAAQ,CAACiC,OAAO,GAAIC,SAAS,KAJ3C,mBAIvB/B,EAJuB,KAIfG,EAJe,KAIID,EAJJ,KAKxB4B,EAAoB9B,EAApB8B,OAAQC,EAAY/B,EAAZ+B,SALgB,EAODhC,oBAAS,GAPR,mBAOxBc,EAPwB,KAOfC,EAPe,KA2B/B,OACI,6BACI,yDAECD,GAAY,uBAAGE,UAAU,WAAb,qCAEb,0BAAMC,SAvBO,SAAAC,GAGjB,GAFAA,EAAEC,iBAEEY,GAAU,GAAKC,GAAY,EAC3BjB,GAAW,OACV,CACDoB,GAAU,SAAAC,GAAC,4BAAQA,GAAR,4BAAenC,GAAf,IAAuBgC,KAAK,IAAII,MAAOC,iBAClD,IAAMC,EAAiBlB,SAASQ,EAAYP,qBAAuBD,SAASW,GAE5EpB,EAAc,2BAAMiB,GAAN,IAAmBP,oBAAsBiB,KAGvDpC,OAYI,2CACA,2BAAOqB,KAAK,OACJC,YAAY,iBACZnB,KAAK,SACLC,MAAOwB,EACPL,SAAWtB,IAEnB,6CACA,2BAAOoB,KAAK,SACJC,YAAY,IACZnB,KAAK,WACLC,MAAOyB,EACPN,SAAWtB,IAEnB,4BAAQoB,KAAK,UAAb,oBCADgB,MA9Cf,WACI,IAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,YAAc,GAE9DC,EAAqBJ,KAAKC,MAC5BC,aAAaC,QAAQ,iBACpB,CAAEtB,QAAQ,GALJ,EAOiBvB,mBAASyC,GAP1B,mBAOJb,EAPI,KAOIO,EAPJ,OAS2BnC,mBAAS8C,GATpC,mBASJjB,EATI,KASSjB,EATT,KAUHW,EAAWM,EAAXN,OAYR,OAVAwB,qBAAU,WACNH,aAAaI,QAAQ,SAAUN,KAAKO,UAAUrB,IAC9CgB,aAAaI,QAAQ,cAAeN,KAAKO,UAAUpB,MACpD,CAACD,EAAQC,IAQR,oCACI,6CACA,kBAACrB,EAAmB0C,SAApB,CACI3C,MAAO,CAAEsB,cAAajB,iBAAgBgB,SAAQO,cAE7CZ,EACG,kBAAC,EAAD,MAEA,oCACI,yBAAKP,UAAU,oBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJ,4BAAQA,UAAU,MAAMmC,QAnBvB,WACjBP,aAAaQ,QACbC,OAAOC,SAASC,KAAOF,OAAOC,SAASC,OAiBvB,yBCrCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.3825cb3d.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n\n        const reset = () => {\n            setValues( initialState );\n        } \n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [target.name]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n  \n}\n","import { createContext } from 'react';\n\nexport const PresupuestoContext = createContext(null);","import React, { useContext, useState } from 'react'\nimport { useForm } from '../hooks/useForm'\nimport { PresupuestoContext } from './PresupuestoContext';\n\nexport const ColocarPresupuesto = () => {\n\n    const [{presupuestoInicial}, handleInputChange, reset] = useForm({presupuestoInicial:''});\n\n   const {setPresupuesto} = useContext(PresupuestoContext);\n\n   const [warning, setWarning] = useState(false)\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        \n        if (presupuestoInicial.length <= 1 || parseInt(presupuestoInicial) <= 0 ){\n            setWarning(true);\n        } else{\n            setPresupuesto({presupuestoInicial: presupuestoInicial, presupuestoRestante : presupuestoInicial, inicio: false})\n            \n            reset()\n        }\n\n    }\n\n    return (\n        <div className= 'card'>\n            <h2>Coloca tu presupuesto</h2>\n\n            {warning && (<p className= \"warning\">el presupuesto es incorrecto</p>)}\n\n            <form onSubmit={handleSubmit}>\n                <input type='number' \n                        placeholder='Coloca tu Presupuesto'\n                        name='presupuestoInicial'\n                        value={presupuestoInicial}\n                        onChange={handleInputChange} />\n\n                <button type='submit'>definir presupuesto</button>\n            </form>\n\n        </div>\n    )\n}\n","import React, { useContext } from \"react\";\nimport { PresupuestoContext } from \"./PresupuestoContext\";\n\nexport const ListadoGastos = () => {\n    const { gastos, presupuesto } = useContext(PresupuestoContext);\n    const { presupuestoRestante, presupuestoInicial } = presupuesto;\n\n    const color = () => {\n        if (presupuestoRestante > ( presupuestoInicial * 0.4 ) ){\n            return 'contador green'\n        } \n        else if (presupuestoRestante <= ( presupuestoInicial * 0.2 )) {\n            return 'contador red'\n        }else{\n            return 'contador yellow'\n        }\n        \n    }\n\n    return (\n        <div>\n            <h2>Listado</h2>\n\n            {gastos.map(({ nombre, cantidad, key }) => (\n                <div className=\"gastos\" key={key}>\n                    <div className=\"gasto\">\n                        <p className=\"gasto-nombre\">{nombre}</p>\n                        <p className=\"gasto-cantidad\">${cantidad}</p>\n                    </div>\n                </div>\n            ))}\n\n            <div className=\"contador presupuesto\">\n                <p>Presupuesto: ${presupuestoInicial}</p>\n            </div>\n\n            <div className={`${color()}`}>\n                <p>Restante: ${presupuestoRestante}</p>\n            </div>\n        </div>\n    );\n};\n","import React, { useContext, useState } from 'react'\nimport { useForm } from '../hooks/useForm'\nimport { PresupuestoContext } from './PresupuestoContext'\n\nexport const AgregarGastos = () => { \n\n    const {presupuesto, setPresupuesto, setGastos} = useContext(PresupuestoContext)\n\n    const [ values, handleInputChange, reset ] = useForm({nombre:'', cantidad:''})\n    const {nombre, cantidad} = values;\n\n    const [warning, setWarning] = useState(false)\n\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n        \n        if (nombre <= 1 || cantidad <= 1){\n            setWarning(true)\n        }else{\n            setGastos(g => [...g, {...values, key: new Date().getTime() }])\n            const newPresupuesto = parseInt(presupuesto.presupuestoRestante) - parseInt(cantidad);\n    \n            setPresupuesto ({...presupuesto, presupuestoRestante : newPresupuesto});\n    \n    \n            reset()\n        }\n\n    }\n\n    return (\n        <div>\n            <h2>Agrega tus gastos aqu√≠</h2>\n\n            {warning && (<p className='warning' >todos los campos son obligatorios</p>)}\n\n            <form onSubmit={ handleSubmit }>\n                <p>Nombre Gasto</p>\n                <input type='text'\n                        placeholder='Ej. Ir a comer'\n                        name='nombre'\n                        value={nombre}\n                        onChange={ handleInputChange } />\n    \n                <p>Cantidad Gasto</p>\n                <input type='number'\n                        placeholder='0'\n                        name='cantidad'\n                        value={cantidad}\n                        onChange={ handleInputChange } />\n    \n                <button type='submit'>agregar gasto</button>\n            </form>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { ColocarPresupuesto } from \"./components/ColocarPresupuesto\";\nimport { ListadoGastos } from \"./components/ListadoGastos\";\nimport { AgregarGastos } from \"./components/AgregarGastos\";\nimport { PresupuestoContext } from \"./components/PresupuestoContext\";\n\nfunction App() {\n    const inicialGastos = JSON.parse(localStorage.getItem(\"gastos\")) || [];\n\n    const inicialPresupuesto = JSON.parse(\n        localStorage.getItem(\"presupuesto\")\n    ) || { inicio: true };\n\n    const [gastos, setGastos] = useState(inicialGastos);\n\n    const [presupuesto, setPresupuesto] = useState(inicialPresupuesto);\n    const { inicio } = presupuesto;\n\n    useEffect(() => {\n        localStorage.setItem(\"gastos\", JSON.stringify(gastos));\n        localStorage.setItem(\"presupuesto\", JSON.stringify(presupuesto));\n    }, [gastos, presupuesto]);\n\n    const cleanStorage = () => {\n        localStorage.clear();\n        window.location.href = window.location.href\n    };\n\n    return (\n        <>\n            <h1>Gasto Semanas</h1>\n            <PresupuestoContext.Provider\n                value={{ presupuesto, setPresupuesto, gastos, setGastos }}\n            >\n                {inicio ? (\n                    <ColocarPresupuesto />\n                ) : (\n                    <>\n                        <div className=\"card presupuesto\">\n                            <AgregarGastos />\n                            <ListadoGastos />\n                        </div>\n                        <button className=\"btn\" onClick={cleanStorage}>\n                            Nuevo Presupuesto\n                        </button>\n                    </>\n                )}\n            </PresupuestoContext.Provider>\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}